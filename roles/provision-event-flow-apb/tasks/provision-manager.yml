- name: create EventFlow UI deployment
  k8s_extensions_v1beta1_deployment:
   name: ui
   namespace: '{{ namespace }}'
   labels:
     app: eventflow
     service: ui
   replicas: 1
   spec_template_metadata_labels:
     app: eventflow
     service: ui
   containers:
   - env:
     image: docker.io/streamzi/eventflow-ui:latest
     imagePullPolicy: IfNotPresent
     name: ui
     ports:
     - container_port: 8080
       protocol: TCP

- name: create EventFlow UI service
  k8s_v1_service:
   name: ui
   namespace: '{{ namespace }}'
   labels:
     app: eventflow
     service: ui
   selector:
     app: eventflow
     service: ui
   ports:
     - name: web
       port: 80
       target_port: 8080

- name: create EventFlow UI route
  openshift_v1_route:
   name: ui
   namespace: '{{ namespace }}'
   labels:
     app: eventflow
     service: ui
   to_name: ui
   spec_port_target_port: web

- name: "Check if the processors.streamzi.io CRD is present"
  shell: kubectl get proc
  ignore_errors: yes
  register: processors_result

- name: Add CRD for Processors
  when: processors_result.rc != 0
  command: "kubectl create -f https://raw.githubusercontent.com/project-streamzi/eventflow/master/ui/src/main/resources/processor-crd.yml"

- name: "Check if the flows.streamzi.io CRD is present"
  shell: kubectl get flows
  ignore_errors: yes
  register: flows_result

- name: Add CRD for Flows
  when: flows_result.rc != 0
  command: "kubectl create -f https://raw.githubusercontent.com/project-streamzi/eventflow/master/ui/src/main/resources/flow-crd.yml"

- name: "Check if the clouds.streamzi.io CRD is present"
  shell: kubectl get clouds
  ignore_errors: yes
  register: clouds_result

- name: Add CRD for Clouds
  when: flows_result.rc != 0
  command: "kubectl create -f https://raw.githubusercontent.com/project-streamzi/eventflow/master/ui/src/main/resources/cloud-crd.yml"
